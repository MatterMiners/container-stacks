name: Docker Cleanup

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  setup-docker-cleanup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get containers to cleanup
        id: get_containers
        run: python3 -c 'import json; import os; print("containers=%s" % json.dumps([os.path.normpath(dirpath) for dirpath, dirnames, filenames in os.walk(".") if "Dockerfile" in filenames]))' >> $GITHUB_OUTPUT
    outputs:
      containers: ${{ steps.get_containers.outputs.containers }}

  docker-cleanup:
    needs: setup-docker-cleanup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        containers: ${{ fromJSON(needs.setup-docker-cleanup.outputs.containers) }}
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.0'
      - name: Install hub-tool
        run: GO111MODULE=on go install github.com/docker/hub-tool@latest
      - name: Login to docker hub
        run: hub-tool login ${{ secrets.DOCKERHUB_USERNAME }} <<< ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Cleanup inactive image on docker hub
        run: for tag in $(hub-tool tag ls matterminers/${{ matrix.containers }} --all | grep inactive | awk '{print $1}' ); do hub-tool tag rm -f $tag; done
      - name: Logout from docker hub
        run: hub-tool logout
