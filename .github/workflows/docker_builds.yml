name: Docker Builds

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  setup-docker-builds:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get containers to build
        id: get_containers
        run: python3 -c 'import json; import os; print("containers=%s" % json.dumps([os.path.normpath(dirpath) for dirpath, dirnames, filenames in os.walk(".") if "Dockerfile" in filenames]))' >> $GITHUB_OUTPUT
    outputs:
      containers: ${{ steps.get_containers.outputs.containers }}

  docker-builds:
    needs: setup-docker-builds
    runs-on: ubuntu-latest
    strategy:
      matrix:
        containers: ${{ fromJSON(needs.setup-docker-builds.outputs.containers) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get current date
        id: get_date
        run: |
          echo "current_date=$(date +%Y%m%d)" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: matterminers/${{ matrix.containers }}
          flavor: |
            latest=true
          tags: |
            type=raw,value=${{ env.current_date }}
      - name: Login to DockerHub
        if: github.repository == 'MatterMiners/container-stacks' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.containers }}
          push: ${{ github.repository == 'MatterMiners/container-stacks' && github.ref == 'refs/heads/main' }}
          file: ${{ matrix.containers }}/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}